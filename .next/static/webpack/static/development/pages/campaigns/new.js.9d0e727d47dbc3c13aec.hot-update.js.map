{"version":3,"file":"static/webpack/static\\development\\pages\\campaigns\\new.js.9d0e727d47dbc3c13aec.hot-update.js","sources":["webpack:///./pages/campaigns/new.js","webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Button, Form, Input, Container } from 'semantic-ui-react'\r\nimport factory from '../../ethereum/factory';\r\nimport web3 from '../'\r\nclass NewCampaign extends Component {\r\n\r\n  state = {\r\n    value: '',\r\n  }\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ value: '' });\r\n\r\n    // creating a new campaign\r\n    // we don't have to specify the amount of gas \r\n    // cuz metamask is going to do that automatically\r\n    await factory.methods.createCampaign(this.state.value).send({\r\n\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <Layout>\r\n\r\n            <Container>\r\n\r\n              <h3>Create a Campaign</h3>\r\n              <Form onSubmit={this.onSubmit}>\r\n                <Form.Field>\r\n                  <label>Minimum Contribution :</label>\r\n                  <Input \r\n                    label=\"wei\" \r\n                    labelPosition=\"right\" \r\n                    type=\"number\" \r\n                    value={this.state.value} \r\n                    onChange={e => { this.setState({ value: e.target.value }); } } \r\n                  />\r\n\r\n                </Form.Field>\r\n\r\n                <Button primary type='submit'>Create</Button>\r\n              </Form>\r\n                            \r\n            </Container>\r\n        </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCampaign;","import React from 'react';\r\nimport factory from '../ethereum/factory';\r\nimport { Button, Card, } from 'semantic-ui-react';\r\nimport Layout from '../components/Layout';\r\n\r\nclass CampaignIndex extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  static async getInitialProps() {\r\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\r\n    return {\r\n      campaigns\r\n    };\r\n  }\r\n\r\n  renderCampaigns() { \r\n    const items = this.props.campaigns.map(address => {\r\n      return {\r\n        header: address,\r\n        description: <a>View Campaign</a>,\r\n        fluid: true\r\n      }\r\n    });\r\n\r\n    return <Card.Group items={items}/>\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      \r\n      <div>\r\n\r\n        <Layout>\r\n\r\n          <h3>Open Campaigns</h3>\r\n\r\n          <Button \r\n            floated=\"right\"\r\n            content='Create Campaign' \r\n            icon='plus'\r\n            labelPosition='left' \r\n            primary\r\n          />\r\n\r\n          {this.renderCampaigns()}\r\n\r\n        </Layout>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CampaignIndex;  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA5CA;AACA;AA8CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;;;;;;;;;;AAzCA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;AATA;AACA;AAkDA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}